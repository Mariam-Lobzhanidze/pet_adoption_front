@use "variables" as v;

@mixin media-up($size) {
  @media (min-width: map-get(v.$breakpoints, $size)) {
    @content;
  }
}

@mixin media-down($size) {
  $max-width: map-get(v.$breakpoints, $size);

  @if $max-width {
    @media (max-width: #{$max-width - 1px}) {
      @content;
    }
  }
}

@mixin grid($columns: 12, $gap: 16px, $breakpoints: ()) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;

  @if length($breakpoints) > 0 {
    @each $size, $value in $breakpoints {
      @include media-up($size) {
        grid-template-columns: repeat($value, 1fr);
      }
    }
  }
}

@mixin responsive-font($mobile, $tablet, $desktop) {
  font-size: $mobile;

  @include media-up(md) {
    font-size: $tablet;
  }

  @include media-up(lg) {
    font-size: $desktop;
  }
}

@mixin responsive-margin-bottom($mobile, $tablet, $desktop) {
  margin-bottom: $mobile;

  @include media-up(md) {
    margin-bottom: $tablet;
  }

  @include media-up(lg) {
    margin-bottom: $desktop;
  }
}

@mixin responsive-margin-top($mobile, $tablet, $desktop) {
  margin-top: $mobile;

  @include media-up(md) {
    margin-top: $tablet;
  }

  @include media-up(lg) {
    margin-top: $desktop;
  }
}

//avatar

@mixin responsive-size($mobile, $tablet, $desktop) {
  width: $mobile;
  height: $mobile;

  @include media-up(md) {
    width: $tablet;
    height: $tablet;
  }

  @include media-up(lg) {
    width: $desktop;
    height: $desktop;
  }
}
